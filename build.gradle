plugins {
    id 'java'
    id 'war'
}

group 'pl.shalpuk'
version '1.0-SNAPSHOT'

//war.archiveName("Scooter.war")

repositories {
    mavenCentral()
}

ext {
    springVersion = '5.3.8'
    springDataVersion = '2.5.2'
    springSecurityVersion = '5.5.1'
    jwtVersion = '0.9.1'
    jUnitVersion = '5.7.0'
    slf4jVersion = '1.7.31'
    mySQLVersion = '8.0.25'
    postgreSQLVersion = '42.2.23'
    flywayVersion = '7.11.2'
    hibernateVersion = '5.5.3.Final'
}

dependencies {
//    implementation ("org.springframework:spring-context:$springVersion")
    implementation("org.springframework:spring-web:$springVersion")
    implementation("org.springframework:spring-webmvc:$springVersion")
    implementation("org.springframework.data:spring-data-jpa:$springDataVersion")
//    implementation("org.springframework.security:spring-security-core:$springSecurityVersion")
    implementation("org.springframework.security:spring-security-web:$springSecurityVersion")
    implementation("org.springframework.security:spring-security-config:$springSecurityVersion")

    implementation("org.hibernate:hibernate-core:$hibernateVersion")

    implementation("mysql:mysql-connector-java:$mySQLVersion")
    implementation("org.postgresql:postgresql:$postgreSQLVersion")
    implementation("org.flywaydb:flyway-core:$flywayVersion")

    implementation("org.apache.commons:commons-lang3:3.12.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.4")
    implementation("org.slf4j:slf4j-simple:$slf4jVersion")
    implementation("io.jsonwebtoken:jjwt:$jwtVersion")
    implementation("log4j:log4j:1.2.17")

    implementation ("com.google.guava:guava:30.1.1-jre")
    implementation("javax.persistence:javax.persistence-api:2.2")
    implementation("javax.validation:validation-api:2.0.1.Final")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.12.4")

    implementation("javax.servlet:javax.servlet-api:3.1.0")

    testImplementation("com.h2database:h2:1.4.200")
    testImplementation("org.springframework:spring-test:$springVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$jUnitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$jUnitVersion")
}

test {
    useJUnitPlatform()
}